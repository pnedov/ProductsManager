@model WarehouseViewModel

@{
    string success_msg = (TempData["Success"] != null) ? TempData["Success"].ToString() : "";
    string failure_msg = (TempData["Error"] != null) ? TempData["Error"].ToString() : "";
    string display_succes = !string.IsNullOrEmpty(success_msg) ? "block" : "none";
    string display_error =  !string.IsNullOrEmpty(failure_msg) ? "block" : "none";
    string? start_date = Model.Filters.Start;
    string? end_date = Model.Filters.End;
    int? status_id = Model.Filters.Status;
    int? suppliers_id = Model.Filters.SuppliersId;
}

<h1>Warehouse Items</h1>

<div class="container p-3">
    <div class="row">
        <div class="col-md-6 d-flex justify-content-start">
            <button id="addNewButton" class="btn btn-primary">Add New</button>
        </div>
        <div class="col-md-6 d-flex justify-content-end">
            <button id="refresh" class="btn btn-success">Refresh</button>
        </div>
    </div>
</div>

<div id="addNewForm" style="display:none;">
	<h4>Add New Warehouse Item</h4>
    <hr />
    <form asp-action="Create" method="post" id="addNewForm" name="addNewForm">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label class="col-form-label col-md-4">Product Name</label>
                    <input type="text" id="Name" name="Name" value="@Model.Item.Name" placeholder="Product Name" class="form-control">
                    @Html.ValidationMessageFor(m => m.Item.Name, "", new { @class = "text-danger" })
                
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label class="col-form-label col-md-4">Unique Code</label>
                    <input type="text" id="UniqueCode" name="UniqueCode" value="@Model.Item.UniqueCode" placeholder="XXX231Z" class="form-control">
                     @Html.ValidationMessageFor(m => m.Item.UniqueCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label class="col-form-label col-md-2">Quantity</label>
                    <input type="number" id="Quantity" name="Quantity" value="@Model.Item.Quantity" placeholder="1000" class="form-control">
                    @Html.ValidationMessageFor(m => m.Item.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label class="col-form-label col-md-2">Price</label>
                    <input type="number" id="Price" name="Price" value="@Model.Item.Price" min="0.00" step="0.01" placeholder="0.00" class="form-control">
                    @Html.ValidationMessageFor(m => m.Item.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label class="col-form-label col-md-2">Suppliers</label>
                    <select id="SuppliersId" name="SuppliersId" class="form-control">
                        <option value="">--- select ---</option>
                        @foreach (var supplier in Model.Suppliers)
                        {
                            <option value="@supplier.Id">@supplier.Name</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(m => m.Item.SuppliersId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label class="col-form-label col-md-2">Status</label>
                    <select id="Status" name="Status" class="form-control">
                        <option value="">--- select ---</option>
                        @foreach (var status in Model.Statuses)
                        {
                            <option value="@status.Value">@status.Text</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="row pt-2">
            <div class="col-md-5"></div>
            <div class="col-md-2">
                <input type="submit" value="Create" id="btnCreate" class="btn btn-primary" />
            </div>
             <div class="col-md-5"></div>
        </div>
    </form>
</div>

<!-- Search Fields-->

<form asp-action="search" method="get">
    <div class="container pt-4 pb-3">
        <div class="row">
            <div class="col-md-11">
                <input type="text" name="searchParam" value="@Model.SearchString" class="form-control"/>
            </div>
            <div class="col">
                <input type="submit" value="Search" id="btnSearch" class="btn btn-primary" class="form-control" />
            </div>
        </div>
    </div>
</form>

<!-- Filters Fields-->

<form asp-action="filters" method="get" id="formFilters">
 <div class="container pt-4 pb-3">
    <div class="row form-row">
       <div class="col-md-9">
             <div class="row form-row">
                <div class="col text-end">
                    <label class="col-form-label">Status</label>
                </div>
                <div class="col-md-2 col-lg-2">
                    <select id="Status" name="Status" class="form-select">
                        <option value="">--- select ---</option>
                        @foreach (var status in Model.Statuses)
                        {
                            var selected_flag = int.Parse(status.Value) == status_id ? "selected" : "";

                            if (!string.IsNullOrEmpty(selected_flag))
                            {

                                <option value="@status.Value" selected="@selected_flag">@status.Text</option>
                            }
                            else
                            {
                                <option value="@status.Value">@status.Text</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-md-1 text-end">
                    <label class="col-form-label">Suppliers</label>
                </div>
                <div class="col-md-2 col-lg-2">
                    <select id="SuppliersId" name="SuppliersId" class="form-select">
                        <option value="">--- select ---</option>
                        @foreach (var supplier in Model.Suppliers)
                        {
                            var selected_flag = supplier.Id == suppliers_id ? "selected" : "";
                            if (!string.IsNullOrEmpty(selected_flag))
                            {
                                <option value="@supplier.Id" selected="@selected_flag">@supplier.Name</option>
                            }
                            else
                            {
                                <option value="@supplier.Id">@supplier.Name</option>
                            }
                        }
                    </select>
                </div>

                <div class="col-md-1 text-end">
                    <label class="col-form-label">From</label>
                </div>
                <div class="col-md-2 col-lg-2 text-start">
                    <div class="input-group date">
                            <input id="start" name="start" maxlength="10" value="@start_date" type="date" class="form-control">
                    </div>
                </div>

                <div class="col-md-1 text-end">
                    <label class="col-form-label">To</label>
                </div>
                <div class="col-md-2 col-lg-2">
                    <div class="input-group date">
                            <input id="end" name="end" maxlength="10" value="@end_date" type="date" class="form-control">
                    </div>
                </div>
            </div>
       </div>
            <div class="col-md-2 col-lg-2">
                <div class="input-group date">
                    <button id="cancel" class="btn btn-secondary">Cancel</button>
                </div>
            </div>
    </div>
  </div>
</form>

<!-- Grid Items-->

<table class="table table-sm table-hover list">
    <thead>
        <tr>
            <td colspan="10"> 
                 <div id="msg-success" style="display:@display_succes;">
                     <div class="alert alert-success">@success_msg</div>
                </div>
                 <div id="msg-error" style="display:@display_error;">
                     <div class="alert alert-danger">@failure_msg</div>
                </div>
            </td>
        </tr>
        <tr>
            <th><input type="checkbox" name="all" value="1" class="on-list-chkall"></th>
            <th class="text-center">Id</th>
            <th class="text-center">Name</th>
            <th class="text-center">Quantity</th>
            <th class="text-center">Price</th>
            <th class="text-center">Unique Code</th>
            <th class="text-center">Suppliers</th>
            <th class="text-center">Status</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model?.Items != null && Model.Items.Any())
        {
            @foreach (var item in Model.Items)
            {
                <tr data-id="@item.Id">
                    <td>
                        <input class="multicb mt-3" type="checkbox" name="cb[@item.Id]" value="1" />
                    </td>
                    <td>
                        <div class="container">
                            <div class="pt-2 start-1">@item.Id</div>
                        </div>
                    </td>
                    <td>
                        <input type="text" name="Name" value="@item.Name" class="form-control" />
                    </td>
                    <td>
                        <input type="number" name="Quantity" value="@item.Quantity" class="form-control" />
                    </td>
                    <td>
                        <input type="number" name="Price" value="@item.Price.ToString("0.000")" min="0.00" step="0.01" class="form-control" />
                    </td>
                    <td>
                        <input type="text" name="UniqueCode" value="@item.UniqueCode" class="form-control" />
                    </td>
                    <td>
                        <select id="SuppliersId" name="SuppliersId" class="form-control">
                            <option value="">--- select ---</option>
                            @foreach (var supplier in Model.Suppliers)
                            {
                                var selected_flag = supplier.Id == item.SuppliersId ? "selected" : "";
                                if(!string.IsNullOrEmpty(selected_flag))
                                {
                                    <option value="@supplier.Id" selected="@selected_flag">@supplier.Name</option>
                                }
                                else
                                {
                                    <option value="@supplier.Id">@supplier.Name</option >
                                }
                            }
                        </select>
                    </td>
                    <td>
                        <select id="Status" name="Status" class="form-control">
                            <option value="">--- select ---</option>
                            @foreach (var status in Model.Statuses)
                            {
                                var selected_flag = int.Parse(status.Value) == item.Status ? "selected" : "";
                                if (!string.IsNullOrEmpty(selected_flag))
                                {

                                    <option value="@status.Value" selected="@selected_flag">@status.Text</option>
                                }
                                else
                                {
                                    <option value="@status.Value">@status.Text</option>
                                }
                            }
                        </select>
                    </td>
                    <td>
                        <button type="button" class="btn btn-primary" onclick="SaveEdit(@item.Id)">Edit</button>
                    </td>
                    <td>
                        <button type="button" class="btn btn-secondary" onclick="ReloadCancel(@item.Id)">Cancel</button>
                    </td>
                </tr>
            }
        }
        else
        { 
            <tr>
                <td colspan="9">No items available</td>
            </tr>  
        }
    </tbody>
    </table>
    <form asp-action="Delete" method="post" name="form_delete" id="list-btn-multi">
        <div id="" class="mb-3">
          with <span class="badge bg-secondary rows-num"></span> checked rows:<br>
          <input type="submit" name="delete" value="Delete" class="btn btn-danger on-delete-multi">
        </div>
        <input type="hidden" id="cbitems" name="cbitems" />
    </form>